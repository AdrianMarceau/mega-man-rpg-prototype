Create migration scripts for all the CONTENT directories
-  types [DONE]
-  battles [DONE]
-  players [DONE]
-  fields [DONE]
-  robots [DONE]
-  abilities [DONE]
-  items [DONE]

Remove dependencis on all of the /data/ directories first and foremost
-  types [DONE]
-  battles [DONE]
-  players [DONE]
-  fields [DONE]
-  robots [DONE]
-  abilities [DONE]
-  items [DONE]

Create htaccess rules OR script to point sprites to new content directories
-  players [DONE]
-  fields [DONE]
-  robots [DONE]
-  abilities [DONE]
-  items [DONE]

Update the admin panel to remove(?) the functions path field, it should be assumed now
-  players [DONE]
-  robots [DONE]
-  fields [DONE]

Update the admin panel to work with the new sprite directories
-  players [DONE]
-  robots [DONE]
-  fields [DONE]

Update the admin panel so that saving auto-updates the data.json file
-  players [DONE]
-  fields [DONE]
-  robots [DONE]

Update code to point to new CONTENT directories (what part of the code?)
[may be done, try renaming the /data/ directories and see if anyting breaks]
[appears to be dead EXCEPT for the migration directory, move that maybe]
-  types [DONE]
-  battles [DONE]
-  players [DONE]
-  fields [DONE]
-  robots [DONE]
-  abilities [DONE]
-  items [DONE]

Update code for items to work with new OBJECT image locations
-  items/attachment-defeat -> objects/defeat-explosion [DONE]
-  items/freeze-heart -> objects/heart-cores/freeze [DONE]
-  items/challenge-marker_base -> objects/challenge-markers/base [DONE]
-  items/field-support -> content/items/_effects/type-arrows_boost-1 [DONE]
-

Update code for abilities to work with new _actions and _effects directories
-  action-chargeweapons -> abilities/_actions/chargeweapons [DONE]
-  action-devpower-clearmission -> abilities/_actions/devpower-clearmission [DONE]
-  action-noweapons -> abilities/_actions/noweapons [DONE]
-  action-unequipitem -> abilities/_actions/unequipitem [DONE]
-  disco-fever:ability-effect_black-overlay -> abilities/_effects/black-overlay [DONE]
-  ability_function_overdrive():fullscreen-black -> abilities/_effects/black-overlay [DONE]
-  bright-burst:bright-burst-2 -> abilities/_effects/yellow-overlay [DONE]
-  abilities/field-support   -> abilities/_effects/type-arrows_boost-1 [DONE]
-  abilities/field-support-2 -> abilities/_effects/type-arrows_boost-2 [DONE]
-  abilities/field-support-3 -> abilities/_effects/type-arrows_break-1 [DONE]
-  abilities/field-support-4 -> abilities/_effects/type-arrows_break-2 [DONE]
-  abilities/ability-results   -> abilities/_effects/stat-arrows [DONE]


Update fields to pull objects from other places
-  update steel-mill to incorporate the fire-bolt into the background [DONE]
-  update industrial-facility to incorporate the gear into the background [DONE]
-  move gentle-countryside's mini-light-lab into field folder, update code somehow [DONE]
-

Manually add REQUIRED /images/ directories to the repo
-  /images/objects/challenge-markers/ [DONE]
-  /images/objects/defeat-explosion/ [DONE]
-  /images/objects/heart-cores/ [DONE]
-  /images/social-icons_32x32.png [DONE]
-  /images/viewer.php [DONE]
-  many many many more (?) [DONE]
-  MMRPG-Prototype_COPPA-Compliance.pdf [DONE]

Update relevant areas of the website/game to pull from the new CDN for faster deploys
-  Update the AUDIO in the game to pull from the CDN [DONE]
-  Update the SCREENSHOTS in the gallery to pull from the CDN [DONE]

Update references to the "_ext/" directory to point to new ".libs/" directory
-  Update refs to _ext/captcha/ (might be difficult) [DONE]
-  Update refs to _ext/codemirror/ [DONE]
-  Update refs to _ext/colorbox/ [DONE]

Update the admin panel with code editor for relevant object types
-  players [DONE]
-  robots [DONE]
-  fields [DONE]

Update migration script to save sprite/image editor IDs as strings instead (contributor's user_name_clean)
-  fields [DONE]
-  players [DONE]
-  robots [DONE]
-  abilities [DONE]
-  items [DONE]

Update the admin panel so it pulls the right contributors list (mmrpg_users vs mmrpg_users_contributors table)
-  players [DONE]
-  robots [DONE]
-  fields [DONE]

Update live DB with changes to challenges table
-  Duplicate mmrpg_challenges as mmrpg_users_challenges [DONE]
-  Duplicate mmrpg_challenges_leaderboard AS mmrpg_users_challenges_leaderboard [DONE]
-  Ensure the base tables only have 'event' kind challenge records [DONE]
-  Ensure the user tables only have 'user' kind challenge records [DONE]

Update website/game to use different favicons for different environments
-  local [DONE]
-  dev [DONE]
-  stage [DONE]
-  live [DONE]

Update the admin panel to deal with git functions add/stage/commit for content directories
and distinguish between LOCAL/DEV/STAGE/PROD servers w/ different push/pull functions
-  Add revert and publish functionality for rogue stars on local/dev [DONE]
-  Add revert and publish functionality for event challenges on local/dev [DONE]
-  Add revert and publish functionality for rpg players on local/dev [DONE]
-  Add revert and publish functionality for rpg robots on local/dev [DONE]
-  Add revert and publish functionality for rpg fields on local/dev [DONE]
-  Add revert and publish functionality for web pages on local/dev [DONE]
-  Add pull functionality for rogue stars on stage/prod [DONE]
-  Add pull functionality for event challenges on stage/prod [DONE]
-  Add pull functionality for rpg players on stage/prod [DONE]
-  Add pull functionality for rpg robots on stage/prod [DONE]
-  Add pull functionality for rpg fields on stage/prod [DONE]
-  Add pull functionality for web pages on stage/prod [DONE]
-  Add pull functionality for users+ on local/dev/stage
-  Add pull functionality for user_challenges on local/dev/stage

Update the admin panel to remove legacy "backup" tabs & functionality now that we have git backups
-  player editor [DONE]
-  robot editor [DONE]
-  field editor [DONE]
-  page editor [DONE]
-  upload script [DONE]

Update the admin panel with editors for the final object types (include all new functionality from above)
-  abilities [DONE]
-  items [DONE]

Update all objects types with a new "protected" flag to prevent deleting
- players
- robots
- abilities
- fields
- items

Update relevant admin panel editors with the option to create new non-protected objects
- players (?)
- robots
- abilities
- fields (?)
- items

Update relevant admin panel editors with the option to delete non-protected objects
- players (?)
- robots
- abilities
- fields (?)
- items

Implement the new "minify" library to compress CSS and JS markup
-  Minify all styles
-  Minify all scripts

Write shell scripts for the following situations
-  setup new copy of dev build [DONE]
-  setup new copy of stage build [DONE]
-  safely setup new copy of prod build
-  safely update master code for any version


MAYBE POST-UPDATE(?)

Create "onload" events (or other event hooks) for items to take advantage of when we eventually update item code

-  Create event hook for "apply_stat_bonuses" rpg_robot function (energy/weapon-upgrade)
    - rpg-robot_apply-stat-bonuses_before [DONE]
    - rpg-robot_apply-stat-bonuses_after [DONE]

-  Create event hook for "update_variables" rpg_robot function (energy/weapon-upgrade, battery/sponge/forge/sapling-circuit)
    - rpg-robot_update-variables_before [DONE]
    - rpg-robot_update-variables_after [DONE]

-  Create event hook for "check_items" rpg_robot function (attack/defense/speed/field-booster)
    - rpg-robot_check-items_before [DONE]
    - rpg-robot_check-items_after [DONE]
    - update energy pellet/capsule/tank items to work with above [DONE]
    - update weapon pellet/capsule/tank items to work with above [DONE]
    - update yashichi item to work with above [DONE]
    - update attack pellet/capsule items to work with above [DONE]
    - update defense pellet/capsule items to work with above [DONE]
    - update speed pellet/capsule items to work with above [DONE]
    - update super pellet/capsule items to work with above [DONE]
    - update elemental cores to work with above

-  Create event hook for "trigger_robot_damage" in rpg_ability/rpg_ability_damage function (fortune-module [crits])
    - rpg-ability_trigger-damage_before
    - rpg-ability_trigger-damage_after

-  Create event hook for "trigger_robot_recovery" in rpg_ability/rpg_ability_recovery function (fortune-module? [crits])
    - rpg-ability_trigger-recovery_before
    - rpg-ability_trigger-recovery_after

-  Create event hook for "trigger_robot_damage" in rpg_item/rpg_item_damage function
    - rpg-item_trigger-damage_before
    - rpg-item_trigger-damage_after

-  Create event hook for "trigger_robot_recovery" in rpg_item/rpg_item_recovery function
    - rpg-item_trigger-recovery_before
    - rpg-item_trigger-recovery_after

-  Create event hook for post-victory reward calculations (fortune-module)
    - rpg-battle_complete-trigger_victory
-  Create event hook for post-failure reward calculations
    - rpg-battle_complete-trigger_failure

-  Create event hook for post-disable stat bonus calculations (growth-module)
    - rpg-robot_trigger-disabled_stat-rewards
-  Create event hook for post-disable experience point calculations (growth-module)
    - rpg-robot_trigger-disabled_experience-rewards
-  Create event hook for post-disable item reward calculations (fortune-module)
    - rpg-robot_trigger-disabled_item-rewards

-  Create event hook for "ability_function_stat_boost_step1" in rpg_ability (reverse-module, xtreme-module)
    - rpg-ability_stat-boost_before
-  Create event hook for "ability_function_stat_boost_step2" in rpg_ability (guard-module)
    - rpg-ability_stat-boost_after
-  Create event hook for "ability_function_stat_break_step1" in rpg_ability (reverse-module, xtreme-module)
    - rpg-ability_stat-break_before
-  Create event hook for "ability_function_stat_break_step2" in rpg_ability (guard-module)
    - rpg-ability_stat-break_after

-  Create event hook for "ability_function_shot" in rpg_ability
    - rpg-ability_elemental-shot_before
    - rpg-ability_elemental-shot_after
-  Create event hook for "ability_function_onload_shot" in rpg_ability (target-module)
    - rpg-ability_elemental-shot_onload_before
    - rpg-ability_elemental-shot_onload_after

-  Create event hook for "ability_function_buster" in rpg_ability (charge-module)
    - rpg-ability_elemental-buster_before
    - rpg-ability_elemental-buster_after
-  Create event hook for "ability_function_onload_buster" in rpg_ability (charge-module, target-module)
    - rpg-ability_elemental-buster_onload_before
    - rpg-ability_elemental-buster_onload_after

-  Create event hook for "ability_function_overdrive" in rpg_ability
    - rpg-ability_elemental-overdrive_before
    - rpg-ability_elemental-overdrive_after
-  Create event hook for "ability_function_onload_overdrive" in rpg_ability
    - rpg-ability_elemental-overdrive_onload_before
    - rpg-ability_elemental-overdrive_onload_after

Create a "Shop Editor" in the admin back-end that lets admins edit the following
-  Auto's Shop:
    -  shop_quote_selling [items, parts]
    -  shop_quote_buying [items]
    -  shop_items lists [items_selling (x4) / items_buying (x1)] & levels each tier unlocked at
    -  shop_parts lists [parts_selling (x4)] & levels each tier unlocked at
-  Reggae's Shop:
    - shop_quote_selling [abilities, weapons]
    - shop_quote_buying [cores]
    - shop_abilities lists [abilities_selling (x6)] & levels each tier unlocked at
-  Kalinka's Shop
    - shop_quote_selling [robots, alts]
    - shop_quote_buying [stars]

